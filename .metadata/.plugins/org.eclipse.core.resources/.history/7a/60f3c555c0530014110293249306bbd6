package model;

import java.util.ArrayList;

/**
 * Class to hold some static constants to avoid cluttering up
 * other classes
 */
public class SQLCodeConstants 
{
	//NOTE The idea behind this is that any change we make to the Cat constructor
	//will also be updated here
	public static final String[][] C_CatsColumns = 
		{
			{"id", "TEXT"},
			{"name", "TEXT"},
			{"age", "INTEGER"},
			{"gender", "TEXT"},
			{"hairColor", "TEXT"},
			{"isFixed", "INTEGER"},
			{"arrivalDate", "TEXT"},
			{"departureDate", "TEXT"}
		};
	
	public static String[] databaseInit() 
	{
		ArrayList<String> script = new ArrayList<String>();
		//initialization of the database properties table
		script.add("DROP TABLE IF EXISTS DBProperties;");
		script.add("CRETE TABLE DBProperties(propKey, propValue);");
				
		//we should be incrementing this number as we go to help check for changes
		script.add("INSERT INTO DBProperties VALUES ('dbVersion', 0);");
		
		String catsSchemaLine = "CREATE TABLE IF NOT EXISTS Cats(";
		
		catsSchemaLine += C_CatsColumns[0][0];
		for(int i = 1; i < C_CatsColumns.length; i++)
		{
			catsSchemaLine += ", " + C_CatsColumns[i][0];
		}
		
		catsSchemaLine += ");";
		script.add(catsSchemaLine);
		
		return (String[]) script.toArray();
	}

	public static final String C_GeneralCatSearch = 
			"SELECT *\n" + 
			"FROM Cats C\n" +
			"WHERE C.%s LIKE '%s%%';\n";
	
	public static final String C_SpecificCatByID = 
			"SELECT *\n" + 
			"FROM Cats C\n" + 
			"WHERE C.id='%s';\n";
	
	private static final String C_InsertNewCat = 
			"INSERT INTO CATS VALUES('%s', '%s', '%s', %i, '%s', '%s', '%s');";
	
	public static String insertNewCatSQL() 
	{
		String statement = "INSERT INTO CATS VALUES(";
		
		return C_InsertNewCat;
	}
	
	public static final String C_UpdateExistingCat = 
			"UPDATE Cats\n" + 
			"SET name='%s', gender='%s', age='%i', breed='%s', color='%s', comments='%s'\n" +
			"WHERE id='%s';\n";
	
	
}
